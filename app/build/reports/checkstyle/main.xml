<?xml version="1.0" encoding="UTF-8"?>
<checkstyle version="8.37">
<file name="/home/direelf/java-project-lvl1/app/src/main/java/hexlet/code/App.java">
<error line="1" severity="error" message="File does not end with a newline." source="com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck"/>
</file>
<file name="/home/direelf/java-project-lvl1/app/src/main/java/hexlet/code/Cli.java">
</file>
<file name="/home/direelf/java-project-lvl1/app/src/main/java/hexlet/code/Engine.java">
<error line="1" severity="error" message="File does not end with a newline." source="com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck"/>
<error line="5" column="25" severity="error" message="Using the &apos;.*&apos; form of import should be avoided - hexlet.code.games.*." source="com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"/>
<error line="18" column="9" severity="error" message="&apos;if&apos; construct must use &apos;{}&apos;s." source="com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"/>
<error line="21" column="9" severity="error" message="switch without &quot;default&quot; clause." source="com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck"/>
<error line="25" column="18" severity="error" message="&apos;3&apos; is a magic number." source="com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"/>
<error line="28" column="18" severity="error" message="&apos;4&apos; is a magic number." source="com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"/>
<error line="31" column="18" severity="error" message="&apos;5&apos; is a magic number." source="com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"/>
<error line="34" column="18" severity="error" message="&apos;6&apos; is a magic number." source="com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"/>
</file>
<file name="/home/direelf/java-project-lvl1/app/src/main/java/hexlet/code/Game.java">
<error line="1" severity="error" message="File does not end with a newline." source="com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck"/>
<error line="8" column="19" severity="error" message="Variable &apos;question&apos; must be private and have accessor methods." source="com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"/>
<error line="9" column="19" severity="error" message="Variable &apos;rightAnswer&apos; must be private and have accessor methods." source="com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"/>
<error line="10" column="19" severity="error" message="Variable &apos;userAnswer&apos; must be private and have accessor methods." source="com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"/>
<error line="11" column="16" severity="error" message="Variable &apos;gameCount&apos; must be private and have accessor methods." source="com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"/>
<error line="13" column="5" severity="error" message="Class &apos;Game&apos; looks like designed for extension (can be subclassed), but the method &apos;letsPlay&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Game&apos; final or making the method &apos;letsPlay&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="15" column="28" severity="error" message="&apos;3&apos; is a magic number." source="com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"/>
<error line="16" column="17" severity="error" message="&apos;while&apos; child has incorrect indentation level 16, expected level should be 12." source="com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"/>
<error line="17" column="17" severity="error" message="&apos;while&apos; child has incorrect indentation level 16, expected level should be 12." source="com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"/>
<error line="18" column="17" severity="error" message="&apos;while&apos; child has incorrect indentation level 16, expected level should be 12." source="com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"/>
<error line="19" column="17" severity="error" message="&apos;while&apos; child has incorrect indentation level 16, expected level should be 12." source="com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"/>
<error line="36" column="5" severity="error" message="Class &apos;Game&apos; looks like designed for extension (can be subclassed), but the method &apos;printQuestion&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Game&apos; final or making the method &apos;printQuestion&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="40" column="5" severity="error" message="Class &apos;Game&apos; looks like designed for extension (can be subclassed), but the method &apos;getUserAnswer&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Game&apos; final or making the method &apos;getUserAnswer&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="48" column="5" severity="error" message="Class &apos;Game&apos; looks like designed for extension (can be subclassed), but the method &apos;getRandomNumber&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Game&apos; final or making the method &apos;getRandomNumber&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
</file>
<file name="/home/direelf/java-project-lvl1/app/src/main/java/hexlet/code/User.java">
<error line="1" severity="error" message="File does not end with a newline." source="com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck"/>
<error line="8" column="5" severity="error" message="Class &apos;User&apos; looks like designed for extension (can be subclassed), but the method &apos;getName&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;User&apos; final or making the method &apos;getName&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="12" column="5" severity="error" message="Class &apos;User&apos; looks like designed for extension (can be subclassed), but the method &apos;setName&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;User&apos; final or making the method &apos;setName&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="12" column="32" severity="error" message="&apos;name&apos; hides a field." source="com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"/>
<error line="16" column="5" severity="error" message="Class &apos;User&apos; looks like designed for extension (can be subclassed), but the method &apos;greeting&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;User&apos; final or making the method &apos;greeting&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="20" column="16" severity="error" message="&apos;name&apos; hides a field." source="com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"/>
<error line="25" column="5" severity="error" message="Class &apos;User&apos; looks like designed for extension (can be subclassed), but the method &apos;congrats&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;User&apos; final or making the method &apos;congrats&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
</file>
<file name="/home/direelf/java-project-lvl1/app/src/main/java/hexlet/code/games/Calc.java">
<error line="3" column="19" severity="error" message="Using the &apos;.*&apos; form of import should be avoided - hexlet.code.*." source="com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"/>
<error line="6" column="9" severity="error" message="Variable &apos;firstNumber&apos; must be private and have accessor methods." source="com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"/>
<error line="7" column="9" severity="error" message="Variable &apos;secondNumber&apos; must be private and have accessor methods." source="com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"/>
<error line="8" column="10" severity="error" message="Variable &apos;operator&apos; must be private and have accessor methods." source="com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"/>
<error line="10" column="5" severity="error" message="Class &apos;Calc&apos; looks like designed for extension (can be subclassed), but the method &apos;printHowTo&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Calc&apos; final or making the method &apos;printHowTo&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="15" column="5" severity="error" message="Class &apos;Calc&apos; looks like designed for extension (can be subclassed), but the method &apos;setQuestion&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Calc&apos; final or making the method &apos;setQuestion&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="17" column="39" severity="error" message="&apos;10&apos; is a magic number." source="com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"/>
<error line="18" column="40" severity="error" message="&apos;10&apos; is a magic number." source="com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"/>
<error line="24" column="5" severity="error" message="Class &apos;Calc&apos; looks like designed for extension (can be subclassed), but the method &apos;getRightAnswer&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Calc&apos; final or making the method &apos;getRightAnswer&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="26" column="9" severity="error" message="switch without &quot;default&quot; clause." source="com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck"/>
<error line="39" column="5" severity="error" message="Class &apos;Calc&apos; looks like designed for extension (can be subclassed), but the method &apos;isUserAnswerCorrect&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Calc&apos; final or making the method &apos;isUserAnswerCorrect&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
</file>
<file name="/home/direelf/java-project-lvl1/app/src/main/java/hexlet/code/games/Even.java">
<error line="3" column="19" severity="error" message="Using the &apos;.*&apos; form of import should be avoided - hexlet.code.*." source="com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"/>
<error line="7" column="5" severity="error" message="Class &apos;Even&apos; looks like designed for extension (can be subclassed), but the method &apos;printHowTo&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Even&apos; final or making the method &apos;printHowTo&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="12" column="5" severity="error" message="Class &apos;Even&apos; looks like designed for extension (can be subclassed), but the method &apos;setQuestion&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Even&apos; final or making the method &apos;setQuestion&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="14" column="51" severity="error" message="&apos;100&apos; is a magic number." source="com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"/>
<error line="17" column="5" severity="error" message="Class &apos;Even&apos; looks like designed for extension (can be subclassed), but the method &apos;getRightAnswer&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Even&apos; final or making the method &apos;getRightAnswer&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="26" column="5" severity="error" message="Class &apos;Even&apos; looks like designed for extension (can be subclassed), but the method &apos;isUserAnswerCorrect&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Even&apos; final or making the method &apos;isUserAnswerCorrect&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
</file>
<file name="/home/direelf/java-project-lvl1/app/src/main/java/hexlet/code/games/GCD.java">
<error line="3" column="19" severity="error" message="Using the &apos;.*&apos; form of import should be avoided - hexlet.code.*." source="com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"/>
<error line="6" column="9" severity="error" message="Variable &apos;firstNumber&apos; must be private and have accessor methods." source="com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"/>
<error line="7" column="9" severity="error" message="Variable &apos;secondNumber&apos; must be private and have accessor methods." source="com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"/>
<error line="9" column="5" severity="error" message="Class &apos;GCD&apos; looks like designed for extension (can be subclassed), but the method &apos;printHowTo&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;GCD&apos; final or making the method &apos;printHowTo&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="15" column="5" severity="error" message="Class &apos;GCD&apos; looks like designed for extension (can be subclassed), but the method &apos;setQuestion&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;GCD&apos; final or making the method &apos;setQuestion&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="17" column="39" severity="error" message="&apos;100&apos; is a magic number." source="com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"/>
<error line="18" column="40" severity="error" message="&apos;100&apos; is a magic number." source="com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"/>
<error line="22" column="5" severity="error" message="Class &apos;GCD&apos; looks like designed for extension (can be subclassed), but the method &apos;getRightAnswer&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;GCD&apos; final or making the method &apos;getRightAnswer&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="27" column="13" severity="error" message="&apos;if&apos; construct must use &apos;{}&apos;s." source="com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"/>
<error line="28" column="13" severity="error" message="&apos;else&apos; construct must use &apos;{}&apos;s." source="com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"/>
<error line="33" column="5" severity="error" message="Class &apos;GCD&apos; looks like designed for extension (can be subclassed), but the method &apos;isUserAnswerCorrect&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;GCD&apos; final or making the method &apos;isUserAnswerCorrect&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
</file>
<file name="/home/direelf/java-project-lvl1/app/src/main/java/hexlet/code/games/Prime.java">
<error line="3" column="19" severity="error" message="Using the &apos;.*&apos; form of import should be avoided - hexlet.code.*." source="com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"/>
<error line="6" column="9" severity="error" message="Variable &apos;numberToCheck&apos; must be private and have accessor methods." source="com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"/>
<error line="8" column="5" severity="error" message="Class &apos;Prime&apos; looks like designed for extension (can be subclassed), but the method &apos;printHowTo&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Prime&apos; final or making the method &apos;printHowTo&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="14" column="5" severity="error" message="Class &apos;Prime&apos; looks like designed for extension (can be subclassed), but the method &apos;setQuestion&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Prime&apos; final or making the method &apos;setQuestion&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="16" column="41" severity="error" message="&apos;100&apos; is a magic number." source="com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"/>
<error line="20" column="5" severity="error" message="Class &apos;Prime&apos; looks like designed for extension (can be subclassed), but the method &apos;getRightAnswer&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Prime&apos; final or making the method &apos;getRightAnswer&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="24" column="26" severity="error" message="&apos;3&apos; is a magic number." source="com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"/>
<error line="33" column="5" severity="error" message="Class &apos;Prime&apos; looks like designed for extension (can be subclassed), but the method &apos;isUserAnswerCorrect&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Prime&apos; final or making the method &apos;isUserAnswerCorrect&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
</file>
<file name="/home/direelf/java-project-lvl1/app/src/main/java/hexlet/code/games/Progression.java">
<error line="3" column="19" severity="error" message="Using the &apos;.*&apos; form of import should be avoided - hexlet.code.*." source="com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"/>
<error line="6" column="11" severity="error" message="Variable &apos;progressionRow&apos; must be private and have accessor methods." source="com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"/>
<error line="7" column="9" severity="error" message="Variable &apos;shadowAnswer&apos; must be private and have accessor methods." source="com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"/>
<error line="9" column="5" severity="error" message="Class &apos;Progression&apos; looks like designed for extension (can be subclassed), but the method &apos;printHowTo&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Progression&apos; final or making the method &apos;printHowTo&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="15" column="5" severity="error" message="Class &apos;Progression&apos; looks like designed for extension (can be subclassed), but the method &apos;setQuestion&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Progression&apos; final or making the method &apos;setQuestion&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="17" column="34" severity="error" message="&apos;10&apos; is a magic number." source="com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"/>
<error line="18" column="36" severity="error" message="&apos;10&apos; is a magic number." source="com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"/>
<error line="19" column="45" severity="error" message="&apos;100&apos; is a magic number." source="com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"/>
<error line="23" column="44" severity="error" message="&apos;10&apos; is a magic number." source="com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"/>
<error line="38" column="5" severity="error" message="Class &apos;Progression&apos; looks like designed for extension (can be subclassed), but the method &apos;getRightAnswer&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Progression&apos; final or making the method &apos;getRightAnswer&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
<error line="43" column="5" severity="error" message="Class &apos;Progression&apos; looks like designed for extension (can be subclassed), but the method &apos;isUserAnswerCorrect&apos; does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class &apos;Progression&apos; final or making the method &apos;isUserAnswerCorrect&apos; static/final/abstract/empty, or adding allowed annotation for the method." source="com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"/>
</file>
</checkstyle>
